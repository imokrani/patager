package com.glaizer.RaliProject.model;
// Generated 12 juil. 2010 14:28:03 by Hibernate Tools 3.2.4.GA

import java.util.List;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;

import org.jboss.seam.annotations.Name;

/**
 * Ressource generated by hbm2java
 */
@Entity
@Table(name = "RESSOURCE", catalog = "ralidb")
@Inheritance(strategy=InheritanceType.JOINED)
@Name("Ressource")
public class Ressource implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idress;
	private Organisation organisation;
	private List<Retroaffectation> phasesretroplanifications;
	private List<Affectation> phasesplanifications;
	private List<Rapportactivites> rapportsactivites;	
	private List<Projet> projets;	

	public Ressource() {
	}

	public Ressource(int idress) {
		this.idress = idress;
	}

	public Ressource(Integer idress, Organisation organisation,
			List<Retroaffectation> phasesretroplanifications,
			List<Affectation> phasesplanifications,
			List<Rapportactivites> rapportsactivites, List<Projet> projets) {
		super();
		this.idress = idress;
		this.organisation = organisation;
		this.phasesretroplanifications = phasesretroplanifications;
		this.phasesplanifications = phasesplanifications;
		this.rapportsactivites = rapportsactivites;
		this.projets = projets;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "IDRESS", unique = true, nullable = false)
	public Integer getIdress() {
		return this.idress;
	}

	public void setIdress(Integer idress) {
		this.idress = idress;
	}

//	@Column(name = "IDORG", nullable = false)
//	public int getIdorg() {
//		return this.idorg;
//	}
//
//	public void setIdorg(int idorg) {
//		this.idorg = idorg;
//	}

	@ManyToOne
	@JoinColumn(name="IDORG", referencedColumnName="IDORG")
	public Organisation getOrganisation() {
		return organisation;
	}

	public void setOrganisation(Organisation organisation) {
		this.organisation = organisation;
	}

	@OneToMany(mappedBy="ressource")
	public List<Retroaffectation> getPhasesretroplanifications() {
		return phasesretroplanifications;
	}

	public void setPhasesretroplanifications(
			List<Retroaffectation> phasesretroplanifications) {
		this.phasesretroplanifications = phasesretroplanifications;
	}

	@OneToMany(mappedBy="ressource")
	public List<Affectation> getPhasesplanifications() {
		return phasesplanifications;
	}

	public void setPhasesplanifications(List<Affectation> phasesplanifications) {
		this.phasesplanifications = phasesplanifications;
	}
	
	@OneToMany(mappedBy="ressource")
	public List<Rapportactivites> getRapportsactivites() {
		return rapportsactivites;
	}

	public void setRapportsactivites(List<Rapportactivites> rapportsactivites) {
		this.rapportsactivites = rapportsactivites;
	}

	@OneToMany(mappedBy="ressource")
	public List<Projet> getProjets() {
		return projets;
	}

	public void setProjets(List<Projet> projets) {
		this.projets = projets;
	}
}
