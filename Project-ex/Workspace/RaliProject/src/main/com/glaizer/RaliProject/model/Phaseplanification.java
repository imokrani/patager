package com.glaizer.RaliProject.model;
// Generated 12 juil. 2010 14:28:03 by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;

/**
 * Phaseplanification generated by hbm2java
 */
@Entity
@Table(name = "PHASEPLANIFICATION", catalog = "ralidb")
public class Phaseplanification implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer idphaseP;
//	private Integer idphasePPere;
//	private Integer idprojet;
	private String lblphaseP;
	private String descphaseP;
	private Integer profondphaseP;
	private Date datedebphaseP;
	private Date datefinphaseP;
	private Projet projet;
	private List<Documentationphase> documentationsphase;
	private List<PhasePAvoirEtat> etatsphases;
	private List<Affectation> ressources;
	private List<Contenu> jourssemaines;
	private List<Contenu> rapportsactivites;
	private List<Phaseplanification> phasesplanification;
	private Phaseplanification phaseplanification;	

	public Phaseplanification() {
	}

	public Phaseplanification(Integer idphaseP, String lblphaseP,
			String descphaseP, Integer profondphaseP, Date datedebphaseP,
			Date datefinphaseP, Projet projet,
			List<Documentationphase> documentationsphase,
			List<PhasePAvoirEtat> etatsphases, List<Affectation> ressources,
			List<Contenu> jourssemaines, List<Contenu> rapportsactivites,
			List<Phaseplanification> phasesplanification,
			Phaseplanification phaseplanification) {
		super();
		this.idphaseP = idphaseP;
		this.lblphaseP = lblphaseP;
		this.descphaseP = descphaseP;
		this.profondphaseP = profondphaseP;
		this.datedebphaseP = datedebphaseP;
		this.datefinphaseP = datefinphaseP;
		this.projet = projet;
		this.documentationsphase = documentationsphase;
		this.etatsphases = etatsphases;
		this.ressources = ressources;
		this.jourssemaines = jourssemaines;
		this.rapportsactivites = rapportsactivites;
		this.phasesplanification = phasesplanification;
		this.phaseplanification = phaseplanification;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "IDPHASE_P", unique = true, nullable = false)
	public Integer getIdphaseP() {
		return this.idphaseP;
	}

	public void setIdphaseP(Integer idphaseP) {
		this.idphaseP = idphaseP;
	}

//	@Column(name = "IDPHASE_P_PERE")
//	public Integer getIdphasePPere() {
//		return this.idphasePPere;
//	}
//
//	public void setIdphasePPere(Integer idphasePPere) {
//		this.idphasePPere = idphasePPere;
//	}

//	@Column(name = "IDPROJET")
//	public Integer getIdprojet() {
//		return this.idprojet;
//	}
//
//	public void setIdprojet(Integer idprojet) {
//		this.idprojet = idprojet;
//	}

	@Column(name = "LBLPHASE_P", length = 65535)
	@Length(max = 65535)
	public String getLblphaseP() {
		return this.lblphaseP;
	}

	public void setLblphaseP(String lblphaseP) {
		this.lblphaseP = lblphaseP;
	}

	@Column(name = "DESCPHASE_P", length = 65535)
	@Length(max = 65535)
	public String getDescphaseP() {
		return this.descphaseP;
	}

	public void setDescphaseP(String descphaseP) {
		this.descphaseP = descphaseP;
	}

	@Column(name = "PROFONDPHASE_P")
	public Integer getProfondphaseP() {
		return this.profondphaseP;
	}

	public void setProfondphaseP(Integer profondphaseP) {
		this.profondphaseP = profondphaseP;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATEDEBPHASE_P", length = 10)
	public Date getDatedebphaseP() {
		return this.datedebphaseP;
	}

	public void setDatedebphaseP(Date datedebphaseP) {
		this.datedebphaseP = datedebphaseP;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "DATEFINPHASE_P", length = 10)
	public Date getDatefinphaseP() {
		return this.datefinphaseP;
	}

	public void setDatefinphaseP(Date datefinphaseP) {
		this.datefinphaseP = datefinphaseP;
	}

	@ManyToOne
	@JoinColumn(name="IDPROJET", referencedColumnName="IDPROJET")
	public Projet getProjet() {
		return projet;
	}

	public void setProjet(Projet projet) {
		this.projet = projet;
	}

	@OneToMany(mappedBy="phaseplanification")
	public List<Documentationphase> getDocumentationsphase() {
		return documentationsphase;
	}

	public void setDocumentationsphase(List<Documentationphase> documentationsphase) {
		this.documentationsphase = documentationsphase;
	}

	@OneToMany(mappedBy="phaseplanification")
	public List<PhasePAvoirEtat> getEtatsphases() {
		return etatsphases;
	}

	public void setEtatsphases(List<PhasePAvoirEtat> etatsphases) {
		this.etatsphases = etatsphases;
	}

	@OneToMany(mappedBy="phaseplanification")
	public List<Affectation> getRessources() {
		return ressources;
	}

	public void setRessources(List<Affectation> ressources) {
		this.ressources = ressources;
	}

	@OneToMany(mappedBy="phaseplanification")
	public List<Contenu> getJourssemaines() {
		return jourssemaines;
	}

	public void setJourssemaines(List<Contenu> jourssemaines) {
		this.jourssemaines = jourssemaines;
	}

	@OneToMany(mappedBy="phaseplanification")
	public List<Contenu> getRapportsactivites() {
		return rapportsactivites;
	}

	public void setRapportsactivites(List<Contenu> rapportsactivites) {
		this.rapportsactivites = rapportsactivites;
	}

	@OneToMany(mappedBy="phaseplanification")
	public List<Phaseplanification> getPhasesplanification() {
		return phasesplanification;
	}

	public void setPhasesplanification(List<Phaseplanification> phasesplanification) {
		this.phasesplanification = phasesplanification;
	}

	@ManyToOne
	@JoinColumn(name="IDPHASE_P_PERE", referencedColumnName="IDPHASE_P")	
	public Phaseplanification getPhaseplanification() {
		return phaseplanification;
	}

	public void setPhaseplanification(Phaseplanification phaseplanification) {
		this.phaseplanification = phaseplanification;
	}
	
}
